extends ../layout

block content
  -function format_date(date){
  - var newDate = new Date(date);
  - var y = newDate.getFullYear();
  - var m = newDate.getMonth();
  - var d = newDate.getDate();
  - return y+'/'+m+'/'+d;
  -}
  //- inline editing
  script(src="//cdnjs.cloudflare.com/ajax/libs/x-editable/1.5.0/bootstrap3-editable/js/bootstrap-editable.min.js")
  //- input mask for phone number
  script(src="/javascripts/jquery.inputmask.bundle.min.js")
  //- combodate
  script(src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.min.js")

  //- select2
  script(src="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/js/select2.full.min.js")

  //- number input
  script(src="/javascripts/bootstrap-formhelpers-phone.js")
  script(src="/javascripts/bootstrap-formhelpers-countries.js")
  
  script(src="/javascripts/Chart.js")
  script(src="/javascripts/goal.js")  

  //- for ajaxsubmit
  script(src="http://cdnjs.cloudflare.com/ajax/libs/jquery.form/3.51/jquery.form.min.js")
  
  //- file input validation
  script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/jquery.validate.min.js")
    //- necesary to validate extension file
  script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/additional-methods.min.js")

  .container-fluid.profile_container
    .col-md-7.col-md-push-1.col-xs-12.col-sm-12.no-gutter_l
      .row.row-centered
        .col-md-12
          .col-md-12.col-sm-12.col-xs-12.content.general
            //- .alert.alert-info.alert-dismissible(role="alert")
            //-   button(type="button", class="close", data-dismiss="alert", aria-label="Close")
            //-     span(aria-hidden="true") &times;
            //-   p Yo
            .col-md-2.user-bg
              a(href="#", id="changeImg", class="text-center", data-toggle="modal", data-target="#uploadModal")
                img(src="/volunteer/photo/#{volunteer.email}", class="text-center")
                p Change photo
            .col-md-7
              h3
                a(href="#", id="first_name", data-type="text", data-pk="first_name", data-placeholder="First Name", data-url="/volunteer/update", data-title="Enter first name") #{volunteer.first_name}
                | 
                a(href="#", id="last_name", data-type="text", data-pk="last_name", data-placeholder="Last Name", data-url="/volunteer/update", data-title="Enter last name") #{volunteer.last_name}
              - if (volunteer.gender)
                a(href="#", data-value="#{volunteer.gender}", id="gender", data-type="select", data-pk="gender", data-placeholder="Gender", data-url="/volunteer/update", data-title="Enter gender")  
              - else
                a(href="#", id="gender", data-type="select", data-pk="gender", data-placeholder="Gender", data-url="/volunteer/update", data-title="Enter gender")  
              p 
                - if (volunteer.birthdate)
                  a(href="#", data-value="#{format_date(volunteer.birthdate)}" id="birthdate", data-type="combodate", data-pk="birthdate", data-url="/volunteer/update", data-title="Enter your birth date")
                - else
                  a(href="#", id="birthdate", data-type="combodate", data-pk="birthdate", data-url="/volunteer/update", data-title="Enter your birth date")
            .col-md-12.col-xs-12.col-sm-12
            .col-md-6.col-sm-6.col-xs-12.info
              h4 Contacts
              p 
                - if (volunteer.email)
                  a(href="#", data-value="#{volunteer.email}", id="email", data-type="email", data-pk="email", data-placeholder="Email", data-url="/volunteer/update", data-title="Enter email address")
                - else
                  a(href="#", data-value="", id="email", data-type="email", data-pk="email", data-placeholder="Email", data-url="/volunteer/update", data-title="Enter email address")
              p 
                - if (volunteer.phone)
                  a(href="#", data-value="#{volunteer.phone}", id="phone", data-type="text", data-pk="phone", data-placeholder="Phone Number", data-url="/volunteer/update", data-format="+44 - dddddddddd", data-title="Enter phone number")  
                - else
                  a(href="#", data-value="", id="phone", data-type="text", data-pk="phone", data-placeholder="Phone Number", data-url="/volunteer/update", data-format="+44 - dddddddddd", data-title="Enter phone number")  
            .col-md-5.col-md-offset-1.col-sm-5.col-sm-offset-1.col-xs-12.info
              h4 &nbsp;
              p 
                - if (volunteer.postcode)
                  a(href="#", data-value="#{volunteer.postcode}", id="postcode", data-type="text", data-pk="postcode", data-placeholder="PostCode", data-url="/volunteer/update", data-title="Enter home address", data-rows="3")  
                - else
                  a(href="#", id="postcode", data-type="text", data-pk="postcode", data-placeholder="Postcode", data-url="/volunteer/update", data-title="Enter postcode", data-rows="3")  
            .col-md-12.col-xs-12.col-sm-12.info
              h4 Position
              p 
                - if (volunteer.position)
                  a(href="#", data-value="#{volunteer.position}", id="position", data-type="select", data-pk="position", data-placeholder="Position", data-url="/volunteer/update", data-title="Enter position", required)  
                - else
                  a(href="#", data-value="", id="position", data-type="select", data-pk="position", data-placeholder="Position", data-url="/volunteer/update", data-title="Enter position", required)   
                - if (volunteer.position == 'student' && volunteer.university)
                  |&nbsp;at 
                  a(href="#", data-value="#{volunteer.university}", id="university", data-type="select", data-pk="university", data-placeholder="University", data-url="/volunteer/update", data-title="Enter university")  
                  p 
                  - if (volunteer.graduate && volunteer.discipline)
                    a(href="#", data-value="#{volunteer.graduate}", id="graduate", data-type="select", data-pk="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="#{volunteer.discipline}", id="discipline", data-type="text", data-pk="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - else if (volunteer.graduate && !volunteer.discipline)
                    a(href="#", data-value="#{volunteer.graduate}", id="graduate", data-type="select", data-pk="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="", id="discipline", data-type="text", data-pk="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - else if (!volunteer.graduate && volunteer.discipline)
                    a(href="#", data-value="", id="graduate", data-type="select", data-pk="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="#{volunteer.discipline}", id="discipline", data-type="text", data-pk="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - else
                    a(href="#", data-value="", id="graduate", data-type="select", data-pk="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="", id="discipline", data-type="text", data-pk="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - if (volunteer.graduation_year)
                    |&nbsp;in 
                    a(href="#", data-value="#{volunteer.graduation_year}", id="graduation_year", data-type="number", data-min="2014", data-max="2020", data-pk="graduation_year", data-placeholder="Graduation Year", data-url="/volunteer/update", data-title="Enter graduation year")
                  - else
                    |&nbsp;in 
                    a(href="#", data-value="", id="graduation_year", data-type="number", data-pk="graduation_year", data-min="2014", data-max="2020", data-placeholder="Graduation Year", data-url="/volunteer/update", data-title="Enter graduation year")
                - else if (volunteer.position == 'student' && !volunteer.university)
                  |&nbsp;at 
                  a(href="#", data-value="", id="university", data-type="select", data-pk="university", data-placeholder="University", data-url="/volunteer/update", data-title="Enter university")  
                  p 
                  - if (volunteer.graduate && volunteer.discipline)
                    a(href="#", data-value="#{volunteer.graduate}", id="graduate", data-type="select", data-pk="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="#{volunteer.discipline}", id="discipline", data-type="text", data-pk="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - else if (volunteer.graduate && !volunteer.discipline)
                    a(href="#", data-value="#{volunteer.graduate}", id="graduate", data-type="select", data-pk="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="", id="discipline", data-type="text", data-pk="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - else if (!volunteer.graduate && volunteer.discipline)
                    a(href="#", data-value="", id="graduate", data-type="select", data-pk="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="#{volunteer.discipline}", id="discipline", data-type="text", data-pk="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - else
                    a(href="#", data-value="", id="graduate", data-type="select", data-pk="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="", id="discipline", data-type="text", data-pk="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - if (volunteer.graduation_year)
                    |&nbsp;graduating in  
                    a(href="#", data-value="#{volunteer.graduation_year}", id="graduation_year", data-type="number", data-min="2014", data-max="2020", data-pk="graduation_year", data-placeholder="Graduation Year", data-url="/volunteer/update", data-title="Enter graduation year")
                  - else
                    |&nbsp;graduating in 
                    a(href="#", data-value="", id="graduation_year", data-type="number", data-pk="graduation_year", data-min="2014", data-max="2020", data-placeholder="Graduation Year", data-url="/volunteer/update", data-title="Enter graduation year")

                - if (volunteer.position == 'employed' && volunteer.company)
                  |&nbsp;at 
                  a(href="#", data-value="#{volunteer.company}", id="company", data-type="text", data-pk="company", data-placeholder="Company", data-url="/volunteer/update", data-title="Enter Company")  
                - else if (volunteer.position == 'employed' && !volunteer.company)
                  |&nbsp;at 
                  a(href="#", data-value="", id="company", data-type="text", data-pk="company", data-placeholder="Company", data-url="/volunteer/update", data-title="Enter Company")  
            .col-md-12.col-xs-12.col-sm-12.info
              h4 About me
              p
                - if (volunteer.about)
                  a(href="#", data-value="#{volunteer.about}", id="about", data-type="textarea", data-pk="about", data-placeholder="About me", data-url="/volunteer/update", data-title="About yourself")  
                - else
                  a(href="#", data-value="", id="about", data-type="textarea", data-pk="about", data-placeholder="About me", data-url="/volunteer/update", data-title="About yourself")  

      .row.row-centered
        .col-md-12
          .col-md-12.content.XP
            .col-md-12
              h2 Experiences

            .col-md-12.XP_form 
              h3 Add an experience to your volunteer profile
              form(action="/experience/new", method="POST")
                h4 Nonprofit
                .form-group.col-md-12.no-gutter
                  input(type="hidden", name="volunteer", value="#{volunteer._id}")
                  label.col-md-12.col-sm-12.col-xs-12.no-gutter(for="nonprofit") Nonprofit name *
                  select.col-md-12.col-sm-12.col-xs-12(id="nonprofit", name="nonprofit", class="select2-single", required)
                  label.col-md-12.col-sm-12.col-xs-12.no-gutter(for="description") Description of your experience
                  textarea.col-md-12.col-sm-12.col-xs-12(name="description", rows="2")

                h4 Activity
                .form-group.col-md-12.no-gutter
                  label.col-md-12.col-sm-12.col-xs-12.no-gutter(for="role") Role
                  select.col-md-12.col-sm-12.col-xs-12(id="role", class="select2-single role", name="role", required)
                  .col-md-12.col-sm-12.col-xs-12.no-gutter
                    .col-md-6.col-sm-6.col-xs-12.no-gutter
                      label.col-md-12.col-sm-12.col-xs-12.text-left.no-gutter(for="skills") Skills developed
                      select.col-md-12.col-sm-12.col-xs-12(id="skills", name='skills', class="skills select2-multiple", multiple, required)

                    .col-md-6.col-sm-6.col-xs-12.no-gutter_r
                      label.col-md-12.col-sm-12.col-xs-12.text-left.no-gutter(for="hours") Number of hours
                      input.col-md-12.col-sm-12.col-xs-12(name="hours", type="number", required)

                  label.col-md-12.col-sm-12.col-xs-12.text-left.no-gutter(for="s_date") Dates
                  .col-md-12.col-sm-12.col-xs-12.no-gutter
                    .col-md-6.col-sm-6.col-xs-12.no-gutter
                      span.col-md-12.col-sm-12.col-xs-12.date_label.no-gutter From *: 
                      input.col-md-12.col-sm-12.col-xs-12(name="s_date", type="date", required)
                    .col-md-6.col-sm-6.col-xs-12.no-gutter_r
                      span.col-md-12.col-sm-12.col-xs-12.date_label.no-gutter To: 
                      input.col-md-12.col-sm-12.col-xs-12(name="e_date", type="date")

                h4 Referee
                p 
                  |Please enter the name and contact details of someone involved in your project who can confirm what you do there.
                  |This person should be aged 18 or over, and you must ask their permission before giving us their details.
                .form-group.col-md-12.no-gutter
                  .col-md-6.col-sm-6.col-xs-12.no-gutter
                    label.col-md-12.col-sm-12.col-xs-12.no-gutter(for="referee_name") Referee name *
                    input.col-md-12.col-sm-12.col-xs-12(name="referee_name", type="text", required)
                  .col-md-6.col-sm-6.col-xs-12.no-gutter_r
                    label.col-md-12.col-sm-12.col-xs-12.no-gutter(for="referee_phone") Referee phone number *
                    input.col-md-12.col-sm-12.col-xs-12.bfh-phone(name="referee_phone", required, type="text", data-format="+44 - dddddddddd")

                  label.col-md-12.col-sm-12.col-xs-12.no-gutter(for="referee_email") Referee email *
                  input.col-md-12.col-sm-12.col-xs-12(name="referee_email", type="email", required)

                h4 Personal Notes
                .form-group.col-md-12.no-gutter
                  label.col-md-12.col-sm-12.col-xs-12.no-gutter(for="notes") You can write personal notes - they won't be public.
                  textarea.col-md-12.col-sm-12.col-xs-12(name="notes", rows="2", placeholder="You can add the situation, tasks, actions and results you obtain with this experience")

                .form-group.col-md-12.text-center
                  input(type="submit", value="Save this experience", class="btn primary sharp")
            
            .col-md-12
              each experience in experiences
                p.charity_name #{experience.nonprofit.name}
                p #{experience.description}
                h5 Activities
                each activity, i in experience.activities
                  if (i%2==0) 
                    != "<div class='row'>"
                      .col-md-6.activity
                        .col-md-12.grey_background
                          p Role: <em>#{activity.role.name}</em>
                          p Skills: <em>
                            each skill, i in activity.skills
                              if (i == 0)
                                span #{skill.name} 
                              else
                                span , #{skill.name}
                            </em>
                          p <em>#{activity.hours} Hours</em>

                    if ((i == experience.activities.length-1) && (experience.activities.length%2 != 0))
                      != "</div>"

                  else
                    .col-md-6.activity
                      .col-md-12.grey_background
                        p Role: <em>#{activity.role.name}</em>
                        p Skills: <em>
                          each skill, i in activity.skills
                            if (i == 0)
                              span #{skill.name} 
                            else
                              span , #{skill.name}
                          </em>
                        p <em>#{activity.hours} Hours</em>
                    != "</div>"

                  //- .col-md-6.activity
                  //-   .col-md-12.grey_background
                  //-     p Role: <em>#{activity.role.name}</em>
                  //-     p Skills: <em>
                  //-       each skill, i in activity.skills
                  //-         if (i == 0)
                  //-           span #{skill.name} 
                  //-         else
                  //-           span , #{skill.name}
                  //-       </em>
                  //-     p <em>#{activity.hours} Hours</em>
                
                .row
                  .col-md-6.activity
                    .col-md-12.grey_background.add_activity.text-center
                      span.add_new.col-md-12.col-sm-12.col-xs-12 Add new activity
                      form(action="/activity/new", method="POST", class="activity_form col-md-12 height-0")
                        input(type="hidden", name="experience", value="#{experience._id}")
                        input(type="hidden", name="volunteer", value="#{volunteer._id}")
                        h3 Add new activity
                        h4 Activity
                        .form-group.col-md-12.no-gutter
                          label.col-md-12.col-sm-12.col-xs-12.no-gutter(for="role") Role
                          select.col-md-12.col-sm-12.col-xs-12(id="role", class="select2-single role", name="role", required)
                          .col-md-12.col-sm-12.col-xs-12.no-gutter
                            .col-md-6.col-sm-6.col-xs-12.no-gutter
                              label.col-md-12.col-sm-12.col-xs-12.text-left.no-gutter(for="skills") Skills developed
                              select.col-md-12.col-sm-12.col-xs-12(id="skills", name='skills', class="skills select2-multiple", multiple, required)

                            .col-md-6.col-sm-6.col-xs-12.no-gutter_r
                              label.col-md-12.col-sm-12.col-xs-12.text-left.no-gutter(for="hours") Number of hours
                              input.col-md-12.col-sm-12.col-xs-12(name="hours", type="number", required)

                          label.col-md-12.col-sm-12.col-xs-12.text-left.no-gutter(for="s_date") Dates
                          .col-md-12.col-sm-12.col-xs-12.no-gutter
                            .col-md-6.col-sm-6.col-xs-12.no-gutter
                              span.col-md-12.col-sm-12.col-xs-12.date_label.no-gutter From *: 
                              input.col-md-12.col-sm-12.col-xs-12(name="s_date", type="date", required)
                            .col-md-6.col-sm-6.col-xs-12.no-gutter_r
                              span.col-md-12.col-sm-12.col-xs-12.date_label.no-gutter To: 
                              input.col-md-12.col-sm-12.col-xs-12(name="e_date", type="date")

                        h4 Referee
                        p 
                          |Please enter the name and contact details of someone involved in your project who can confirm what you do there.
                          |This person should be aged 18 or over, and you must ask their permission before giving us their details.
                        .form-group.col-md-12.no-gutter
                          .col-md-6.col-sm-6.col-xs-12.no-gutter
                            label.col-md-12.col-sm-12.col-xs-12.no-gutter(for="referee_name") Referee name *
                            input.col-md-12.col-sm-12.col-xs-12(name="referee_name", type="text", required)
                          .col-md-6.col-sm-6.col-xs-12.no-gutter_r
                            label.col-md-12.col-sm-12.col-xs-12.no-gutter(for="referee_phone") Referee phone number *
                            input.col-md-12.col-sm-12.col-xs-12.bfh-phone(name="referee_phone", required, type="text", data-format="+44 - dddddddddd")

                          label.col-md-12.col-sm-12.col-xs-12.no-gutter(for="referee_email") Referee email *
                          input.col-md-12.col-sm-12.col-xs-12(name="referee_email", type="email", required)

                        h4 Personal Notes
                        .form-group.col-md-12.no-gutter
                          label.col-md-12.col-sm-12.col-xs-12.no-gutter(for="notes") You can write personal notes - they won't be public.
                          textarea.col-md-12.col-sm-12.col-xs-12(name="notes", rows="2", placeholder="You can add the situation, tasks, actions and results you obtain with this experience")

                        .form-group.col-md-12.text-center
                          input(type="submit", value="Add activity", class="btn primary sharp")
              
            .col-md-12.add
              a(href="#", id="addXP")
                p.text-center Add an experience
    .col-md-3.col-md-push-1
      div.row.row-centered
        .col-md-12.content
          .col-md-12
            h2 Goals
            
            h5 Total hours volunteered
            canvas(id="g_goal", height="280px", width="80px")

            h5 Hours volunteered <em>this week</em>
            canvas(id="w_goal", height="230px")
            p You've reached your weekly goal!! <em>
              a(href="#") Share it </em>

    .modal.fade#uploadModal(tabindex='-1')
      .modal-dialog
        .modal-content
          .modal-header
            button(type="button" class="close" data-dismiss="modal") &times;
            p Change your profile photo
          .modal-body
            form(id="uploadForm", enctype="multipart/form-data", action="/volunteer/photo", method="post")
              input(type="file", name="userPhoto", value="Upload new photo")
              input(type="submit", value="Change photo", name="submit", class="btn btn-primary sharp modal-submit")

  script.
    $.fn.editable.defaults.mode = 'inline';
    $(document).ready(function() {
      
      //- Editable set up
      $('#first_name').editable({emptytext: 'First Name'});
      $('#last_name').editable({emptytext: 'Last Name'});
      $('#graduate').editable({
        emptytext: 'Level',
        source: [
              {value:"undergraduate", text:"Undergraduate"},
              {value:"postgraduate", text:"Postgraduate"},
            ]
        });
      $('#graduation_year').editable({emptytext: 'Graduation year'});
      $('#discipline').editable({emptytext: 'Discipline'});
      $('#email').editable({
        value: email,
        emptytext: 'Email',
        validate: function(value) {
            if($.trim(value) == '') {
                return "This field can't be empty required";
            }
        }
        });
      $('#phone').editable({
        emptytext: 'Phone Number', 
        value: phone,
        success: function(response, newValue) {
          if (response.status == 'error') return response.msg;
        }
      });
      $('#phone').on('shown', function(e, editable) {
      if (editable) {
         $(this).data('editable').input.$input.inputmask('+44 999-999-9999');
      }
      });
      $('#company').editable({emptytext: 'Company'});
      $('#about').editable({emptytext: 'About Me'});
      $('#about').on('shown', function(e, editable){
          $('.editable-container').css("width", "90%");
          $('.form-group').css("width", "90%");
          $('.editable-input').css("width", "90%");
          $('textarea').css("width", "100%");
          });
      $('#postcode').editable({emptytext: 'Postcode'});
      $('#position').editable({
        emptytext: 'Position',
        source: [
              {value:"student", text:"Student"},
              {value:"employed", text:"Employed"},
              {value:"unemployed", text:"Unemployed"}
            ]
      });
      $("#position").on('save', function(e, params){
          switch(params.newValue)
            {
              case 'student':
                location.reload();
                break;
              case 'unemployed':
                location.reload();
                break;
              case "employed":
                location.reload();
                break;
            }
          //- Reload to avoid building the page with JS. Not a satisfying method -> MEAN
        });
      $('#birthdate').editable({
        format: 'YYYY-MM-DD',    
        viewformat: 'DD/MM/YYYY',    
        template: 'D / MMMM / YYYY',    
        combodate: {
              maxYear: 1999, 
              minYear: 1920
         },
         emptytext: 'Birthdate'
      });
      $('#gender').editable({
        emptytext: "Gender",
        source: [
              {value:"male", text:"Male"},
              {value:"female", text:"Female"}
            ]
      });
      $('#university').editable({
        emptytext: 'University',
        source: [
              {value:"westminster", text:"University of Westminster"},
              {value:"city", text:"City University"}
            ]
      });
      
      // Preload external data function for skills + role
      function loadExternalData(listName, id) {
        $.getJSON('/'+listName+'/list', function(listName) {
          $(id).empty();
          if (listName) {
            $(id).append('<option></option>');
            $.each(listName, function(i, val){
              $(id).append('<option value='+ val._id + '>'+ val.name +'</option>');
            });
          } 
          console.log(listName);
        });
      }

      // Prepare form to add new skill

      loadExternalData('skill', ".skills");
      loadExternalData('role', ".role");
      loadExternalData('nonprofit', "#nonprofit");
      
      // Add experience form open and set up of select2 tags
      $('#addXP').on('click', function(e){
        e.preventDefault();
        $(".XP_form").fadeIn();
        $(".skills").select2({
          placeholder: "Select up to 3 skills",
          maximumSelectionLength: 3,
          language: {
            maximumSelected: function () {
              return 'Sorry, you can only select up to 3 skills';
            }
          }
        });
        
        $(".role").select2({
          placeholder: "Select a role",
        });

        $("#nonprofit").select2({
          placeholder: "Select a nonprofit",
        });

        $('html, body').animate({
            scrollTop: $(".XP").offset().top
          }, "slow");
        if ($(".activity_form").is(":visible")) {
          $(".add_new").on('click', showActivity);
          $(".activity_form:visible").hide().removeClass('height-auto').parent().addClass('text-center').removeClass('no-hover').parent().switchClass("col-md-12", "col-md-6", 500, function(){
          $(".add_new").removeClass('hide_it').show();
          });
        }
      });

      function showActivity (element) {
      $(element).find(".add_new").hide().addClass('hide_it');
      $(element).find(".activity_form").show().addClass('height-auto').parent().removeClass('text-center').addClass('no-hover').parent().switchClass("col-md-6", "col-md-12", 500, function () {
          $('html, body').animate({
            scrollTop: $(element).find(".activity_form").offset().top
          }, "slow");
          $(".skills").select2({
            placeholder: "Select up to 3 skills",
            maximumSelectionLength: 3,
            language: {
              maximumSelected: function () {
                return 'Sorry, you can only select up to 3 skills';
              }
            }
          });
          $(".role").select2({
            placeholder: "Select a role",
          });
        });
      }

      $(".add_new").on('click', function(e){
        e.preventDefault();
        if ($('.XP_form').is(':visible')) {
          $('.XP_form').hide();
          $('html, body').animate({
              scrollTop: $(".activity_form").offset().top
            }, "slow");
        }
        showActivity($(this).parent());
        $(this).off('click', showActivity);
      });

      //-  Add validation that end date > start date
      $("input[name*=s_date]").focusout(function() {
        $('input[name*=e_date]').attr('min', $(this).val());
      });

      $('.XP_form form').submit(function() {
        $(this).ajaxSubmit({
          error: function(xhr) {
            console.log(xhr);
          },
          success: function(response) {
            console.log(response);
            console.log(this);
            //- $(".add_new").on('click', showActivity);
            //- $(this).fadeOut('slow', function(){location.reload()});
            location.reload();
          }
        });
        return false;
      });

      $('.activity_form').submit(function() {
        $(this).ajaxSubmit({
          error: function(xhr) {
            console.log(xhr);
          },
          success: function(response) {
            console.log(response);
            console.log(this);
            //- $(this).fadeOut('slow', function(){location.reload()});
            location.reload();
          }
        });
        return false;
      });


      // Validate photo form
      $('#uploadForm').validate({
          rules: {
              userPhoto: {
                  required: true,
                  extension: "png|jpg|gif|jpeg"
              }
          },
          messages: {
              userPhoto: {
                  required: "Please upload a new photo",
                  extension: "Please upload a valid image file"
              }
          }
      });

      $('#uploadForm').submit(function() {
        $(this).ajaxSubmit({
          error: function(xhr) {
            console.log(xhr);
          },
          success: function(response) {
            console.log(response);
            //remove public from path
            var $newFile = response.substring(6);
            $('.modal').modal('toggle');
            $(".user-bg img").attr('src',$newFile);
          }
        });
        return false;
      });    

    });



