extends ../layout
append head-css
  link(href="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/css/select2.min.css", rel="stylesheet")
  link(href="//cdnjs.cloudflare.com/ajax/libs/x-editable/1.5.0/bootstrap3-editable/css/bootstrap-editable.css", rel="stylesheet")
  link(href="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/css/select2.min.css", rel="stylesheet")
append head-js
  //- inline editing
  script(src="//cdnjs.cloudflare.com/ajax/libs/x-editable/1.5.0/bootstrap3-editable/js/bootstrap-editable.min.js")
  //- input mask for phone number
  script(src="//cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/3.1.62/jquery.inputmask.bundle.min.js")
  //- combodate
  script(src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.min.js")

  //- select2
  script(src="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/js/select2.full.min.js")

  //- number input
  script(src="//cdn.jsdelivr.net/bootstrap.formhelpers/1.8.2/js/bootstrap-formhelpers-phone.js")
  script(src="//cdn.jsdelivr.net/bootstrap.formhelpers/1.8.2/js/bootstrap-formhelpers-countries.js")
  
  script(src="//cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.js")
  script(src="/javascripts/goal.js")  

  //- for ajaxsubmit
  script(src="//cdnjs.cloudflare.com/ajax/libs/jquery.form/3.51/jquery.form.min.js")
  
  //- file input validation
  script(src="//cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/jquery.validate.min.js")
    //- necesary to validate extension file
  script(src="//cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/additional-methods.min.js")

block content
  -function format_date(date){
  - var newDate = new Date(date);
  - var y = newDate.getFullYear();
  - var m = newDate.getMonth() + 1;
  - var d = newDate.getDate();
  - return y+'/'+m+'/'+d;
  -}
  -function bar_size(size){
  -var barSize = Math.round(size/4);
  -if(barSize >= 400) barSize = 100;
  -return barSize + '%'
  -}
  -function color_opacity(size){
  -var opacity = size/100;
  -if(opacity >= 1) opacity = 1;
  -if(opacity <= 0.1) opacity = 0.1;
  -return opacity
  -}
  -function plurialize_reco(number){
  -if (number == 1) return number + ' recommendation'
  -else return number + ' recommendations'
  -}

  .container-fluid.profile_container
    .col-md-7.col-md-push-1.col-xs-12.col-sm-12.no-gutter_l
      .row.row-centered
        .col-md-12
          .col-md-12.col-sm-12.col-xs-12.content.general
            //- .alert.alert-info.alert-dismissible(role="alert")
            //-   button(type="button", class="close", data-dismiss="alert", aria-label="Close")
            //-     span(aria-hidden="true") &times;
            //-   p Yo
            .col-md-2.user-bg
              a(href="#", id="changeImg", class="text-center", data-toggle="modal", data-target="#uploadModal")
                img(src="/volunteer/photo/#{volunteer._id}", class="text-center")
                p Change photo
            .col-md-7
              h3
                a(href="#", id="first_name", data-type="text", data-pk="#{volunteer._id}", data-id="first_name", data-placeholder="First Name", data-url="/volunteer/update", data-title="Enter first name") #{volunteer.first_name}
                | 
                a(href="#", id="last_name", data-type="text", data-pk="#{volunteer._id}", data-id="last_name", data-placeholder="Last Name", data-url="/volunteer/update", data-title="Enter last name") #{volunteer.last_name}
              - if (volunteer.gender)
                a(href="#", data-value="#{volunteer.gender}", id="gender", data-type="select", data-pk="#{volunteer._id}", data-id="gender", data-placeholder="Gender", data-url="/volunteer/update", data-title="Enter gender")  
              - else
                a(href="#", id="gender", data-type="select", data-pk="#{volunteer._id}", data-id="gender", data-placeholder="Gender", data-url="/volunteer/update", data-title="Enter gender")  
              p 
                - if (volunteer.birthdate)
                  a(href="#", data-value="#{format_date(volunteer.birthdate)}" id="birthdate", data-type="combodate", data-pk="#{volunteer._id}", data-id="birthdate", data-url="/volunteer/update", data-title="Enter your birth date")
                - else
                  a(href="#", id="birthdate", data-type="combodate", data-pk="#{volunteer._id}", data-id="birthdate", data-url="/volunteer/update", data-title="Enter your birth date")
            .col-md-12.col-xs-12.col-sm-12
            .col-md-6.col-sm-6.col-xs-12.info
              h4 Contacts
              p 
                - if (volunteer.email)
                  a(href="#", data-value="#{volunteer.email}", id="email", data-type="email", data-pk="#{volunteer._id}", data-id="email", data-placeholder="Email", data-url="/volunteer/update", data-title="Enter email address")
                - else
                  a(href="#", data-value="", id="email", data-type="email", data-pk="#{volunteer._id}", data-id="email", data-placeholder="Email", data-url="/volunteer/update", data-title="Enter email address")
              p 
                - if (volunteer.phone)
                  a(href="#", data-value="#{volunteer.phone}", id="phone", data-type="text", data-pk="#{volunteer._id}", data-id="phone", data-placeholder="Phone Number", data-url="/volunteer/update", data-format="+44 - dddddddddd", data-title="Enter phone number")  
                - else
                  a(href="#", data-value="", id="phone", data-type="text", data-pk="#{volunteer._id}", data-id="phone", data-placeholder="Phone Number", data-url="/volunteer/update", data-format="+44 - dddddddddd", data-title="Enter phone number")  
            .col-md-5.col-md-offset-1.col-sm-5.col-sm-offset-1.col-xs-12.info
              h4 &nbsp;
              p 
                - if (volunteer.postcode)
                  a(href="#", data-value="#{volunteer.postcode}", id="postcode", data-type="text", data-pk="#{volunteer._id}", data-id="postcode", data-placeholder="PostCode", data-url="/volunteer/update", data-title="Enter home address", data-rows="3")  
                - else
                  a(href="#", id="postcode", data-type="text", data-pk="#{volunteer._id}", data-id="postcode", data-placeholder="Postcode", data-url="/volunteer/update", data-title="Enter postcode", data-rows="3")  
            .col-md-12.col-xs-12.col-sm-12.info
              h4 Position
              p 
                - if (volunteer.position)
                  a(href="#", data-value="#{volunteer.position}", id="position", data-type="select", data-pk="#{volunteer._id}", data-id="position", data-placeholder="Position", data-url="/volunteer/update", data-title="Enter position", required)  
                - else
                  a(href="#", data-value="", id="position", data-type="select", data-pk="#{volunteer._id}", data-id="position", data-placeholder="Position", data-url="/volunteer/update", data-title="Enter position", required)   
                - if (volunteer.position == 'student' && volunteer.university)
                  |&nbsp;at 
                  a(href="#", data-value="#{volunteer.university}", id="university", data-type="select", data-pk="#{volunteer._id}", data-id="university", data-placeholder="University", data-url="/volunteer/update", data-title="Enter university")  
                  p 
                  - if (volunteer.graduate && volunteer.discipline)
                    a(href="#", data-value="#{volunteer.graduate}", id="graduate", data-type="select", data-pk="#{volunteer._id}", data-id="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="#{volunteer.discipline}", id="discipline", data-type="text", data-pk="#{volunteer._id}", data-id="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - else if (volunteer.graduate && !volunteer.discipline)
                    a(href="#", data-value="#{volunteer.graduate}", id="graduate", data-type="select", data-pk="#{volunteer._id}", data-id="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="", id="discipline", data-type="text", data-pk="#{volunteer._id}", data-id="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - else if (!volunteer.graduate && volunteer.discipline)
                    a(href="#", data-value="", id="graduate", data-type="select", data-pk="#{volunteer._id}", data-id="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="#{volunteer.discipline}", id="discipline", data-type="text", data-pk="#{volunteer._id}", data-id="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - else
                    a(href="#", data-value="", id="graduate", data-type="select", data-pk="#{volunteer._id}", data-id="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="", id="discipline", data-type="text", data-pk="#{volunteer._id}", data-id="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - if (volunteer.graduation_year)
                    |&nbsp;in 
                    a(href="#", data-value="#{volunteer.graduation_year}", id="graduation_year", data-type="number", data-min="2014", data-max="2020", data-pk="#{volunteer._id}", data-id="graduation_year", data-placeholder="Graduation Year", data-url="/volunteer/update", data-title="Enter graduation year")
                  - else
                    |&nbsp;in 
                    a(href="#", data-value="", id="graduation_year", data-type="number", data-pk="#{volunteer._id}", data-id="graduation_year", data-min="2014", data-max="2020", data-placeholder="Graduation Year", data-url="/volunteer/update", data-title="Enter graduation year")
                - else if (volunteer.position == 'student' && !volunteer.university)
                  |&nbsp;at 
                  a(href="#", data-value="", id="university", data-type="select", data-pk="#{volunteer._id}", data-id="university", data-placeholder="University", data-url="/volunteer/update", data-title="Enter university")  
                  p 
                  - if (volunteer.graduate && volunteer.discipline)
                    a(href="#", data-value="#{volunteer.graduate}", id="graduate", data-type="select", data-pk="#{volunteer._id}", data-id="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="#{volunteer.discipline}", id="discipline", data-type="text", data-pk="#{volunteer._id}", data-id="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - else if (volunteer.graduate && !volunteer.discipline)
                    a(href="#", data-value="#{volunteer.graduate}", id="graduate", data-type="select", data-pk="#{volunteer._id}", data-id="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="", id="discipline", data-type="text", data-pk="#{volunteer._id}", data-id="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - else if (!volunteer.graduate && volunteer.discipline)
                    a(href="#", data-value="", id="graduate", data-type="select", data-pk="#{volunteer._id}", data-id="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="#{volunteer.discipline}", id="discipline", data-type="text", data-pk="#{volunteer._id}", data-id="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - else
                    a(href="#", data-value="", id="graduate", data-type="select", data-pk="#{volunteer._id}", data-id="graduate", data-placeholder="Graduate", data-url="/volunteer/update", data-title="Enter graduate")  
                    |&nbsp;in 
                    a(href="#", data-value="", id="discipline", data-type="text", data-pk="#{volunteer._id}", data-id="discipline", data-placeholder="Discipline", data-url="/volunteer/update", data-title="Enter Discipline")   
                  - if (volunteer.graduation_year)
                    |&nbsp;graduating in  
                    a(href="#", data-value="#{volunteer.graduation_year}", id="graduation_year", data-type="number", data-min="2014", data-max="2020", data-pk="#{volunteer._id}", data-id="graduation_year", data-placeholder="Graduation Year", data-url="/volunteer/update", data-title="Enter graduation year")
                  - else
                    |&nbsp;graduating in 
                    a(href="#", data-value="", id="graduation_year", data-type="number", data-pk="#{volunteer._id}", data-id="graduation_year", data-min="2014", data-max="2020", data-placeholder="Graduation Year", data-url="/volunteer/update", data-title="Enter graduation year")

                - if (volunteer.position == 'employed' && volunteer.company)
                  |&nbsp;at 
                  a(href="#", data-value="#{volunteer.company}", id="company", data-type="text", data-pk="#{volunteer._id}", data-id="company", data-placeholder="Company", data-url="/volunteer/update", data-title="Enter Company")  
                - else if (volunteer.position == 'employed' && !volunteer.company)
                  |&nbsp;at 
                  a(href="#", data-value="", id="company", data-type="text", data-pk="#{volunteer._id}", data-id="company", data-placeholder="Company", data-url="/volunteer/update", data-title="Enter Company")  
            .col-md-12.col-xs-12.col-sm-12.info
              h4 About me
              p
                - if (volunteer.about)
                  a(href="#", data-value="#{volunteer.about}", id="about", data-type="textarea", data-pk="#{volunteer._id}", data-id="about", data-placeholder="About me", data-url="/volunteer/update", data-title="About yourself")  
                - else
                  a(href="#", data-value="", id="about", data-type="textarea", data-pk="#{volunteer._id}", data-id="about", data-placeholder="About me", data-url="/volunteer/update", data-title="About yourself")  

            .col-md-12.col-xs-12.col-sm-12.info.text-right
              em
                a(href="/volunteer/#{volunteer._id}") See your public profile

      -if (volunteer_skills.skills.length > 0)
        .row.row-centered
          .col-md-12
            .col-md-12.content.skills
              .col-md-12
                h2 Skills
                each skills in volunteer_skills
                  each skill in skills
                    .col-md-12.no-gutter_l.barContainer
                      .bar(style="width:#{bar_size(skill.sum_hours)};background-color:rgba(162, 255, 0, #{color_opacity(skill.sum_hours)})")
                        span #{skill._id.name}

      .row.row-centered
        .col-md-12
          .col-md-12.content.XP
            .col-md-12
              h2 Experiences

            .col-md-12.XP_form 
              h3 Add an experience to your volunteer profile
              include ./_formXP.jade
            
            .col-md-12
              each experience in experiences
                p.charity_name #{experience.nonprofit.name}
                p 
                  a.xp_description(href="#", data-value="#{experience.description}", id="description", data-type="textarea", data-pk="#{experience._id}", data-id="description", data-placeholder="Description", data-url="/experience/update", data-title="Enter Experience Description")
                - if (experience.recommendation_number > 0)
                    p <u><a href="#" class="reco">#{plurialize_reco(experience.recommendation_number)}</a></u>
                h5 Activities
                each activity, i in experience.activities
                  if (i%2==0) 
                    != "<div class='row'>"
                      .col-md-6.activity(data-id="#{activity._id}", data-validated="#{activity.validated}")
                        .col-md-12.grey_background
                          p Role: <em>#{activity.role.name}</em>
                          p Skills: <em>
                            each skill, i in activity.skills
                              if (i == 0)
                                span #{skill.name}
                              else
                                span , #{skill.name}
                            </em>
                          p <em>#{activity.hours} Hours</em>
                          p.validation #{activity.validated}

                    if ((i == experience.activities.length-1) && (experience.activities.length%2 != 0))
                      != "</div>"

                  else
                    .col-md-6.activity(data-id="#{activity._id}", data-validated="#{activity.validated}")
                      .col-md-12.grey_background
                        p Role: <em>#{activity.role.name}</em>
                        p Skills: <em>
                          each skill, i in activity.skills
                            if (i == 0)
                              span #{skill.name}
                            else
                              span , #{skill.name}
                          </em>
                        p <em>#{activity.hours} Hours</em>
                        p.validation #{activity.validated}
                    != "</div>"
                
                .row
                  .col-md-6
                    .col-md-12.grey_background.add_activity.text-center
                      span.add_new.col-md-12.col-sm-12.col-xs-12 Add new activity
                      include ./_formActivity.jade
              
            .col-md-12.add
              a(href="#", id="addXP")
                p.text-center Add an experience

      -if (recommendations.recommendations.length > 0)
        .row.row-centered
          .col-md-12
            .col-md-12.content.recommendation
              .col-md-12
                h2 Recommendations

                each recommendation in recommendations.recommendations
                  .col-md-12.col-sm-12.col-xs-12.no-gutter
                    p.manager_name #{recommendation.recommendation.referee_name} from #{recommendation.nonprofit} 
                    p #{recommendation.recommendation.recommendation}
                  .col-md-2.break

    .col-md-3.col-md-push-1
      .row.row-centered
        .col-md-12.content
          .col-md-12
            h2 Goals
            
            h5 Total hours volunteered
            canvas(id="g_goal", height="280px", width="80px")

            h5 Hours volunteered <em>this week</em>
            canvas(id="w_goal", height="230px")
            p You've reached your weekly goal!! <em>
              a(href="#") Share it </em>

    .modal.fade#uploadModal(tabindex='-1')
      .modal-dialog
        .modal-content
          .modal-header
            button(type="button" class="close" data-dismiss="modal") &times;
            p Change your profile photo
          .modal-body
            form(id="uploadForm", enctype="multipart/form-data", action="/volunteer/photo", method="post")
              input(type="file", name="userPhoto", value="Upload new photo")
              input(type="submit", value="Change photo", name="submit", class="btn btn-primary modal-submit")

    .modal.fade#nonprofitModal(tabindex='-1')
      .modal-dialog
        .modal-content
          .modal-header
            button(type="button" class="close" data-dismiss="modal") &times;
            p Add a new Nonprofit
          .modal-body
            p If you are not finding the nonprofit you volunteered with, please just add its name here. We'll review this information. <br/>
            form(id="nonprofitForm", action="/nonprofit/new", method="post")
              input.col-md-12.col-sm-12.col-xs-12(type="text", name="name", autofocus, placeholder="Nonprofit name", required)
              input(type="hidden", name="suggested_by_volunteer", value="true")
              input(type="hidden", name="created_by", value="#{volunteer._id}")
              input(type="submit", value="Add new nonprofit", name="submit", class="btn btn-primary modal-submit")

    .modal.fade#skillModal(tabindex='-1')
      .modal-dialog
        .modal-content
          .modal-header
            button(type="button" class="close" data-dismiss="modal") &times;
            p Add a new Skill
          .modal-body
            p If you are not finding the skill you want, you can add it's name here. We'll review this information. <br/>
            form(id="skillForm", action="/skill/new", method="post")
              input.col-md-12.col-sm-12.col-xs-12(type="text", name="name", autofocus, placeholder="Skill name", required)
              input(type="hidden", name="suggested_by_volunteer", value="true")
              input(type="hidden", name="created_by", value="#{volunteer._id}")
              input(type="submit", value="Add new skill", name="submit", class="btn btn-primary modal-submit")

    .modal.fade#roleModal(tabindex='-1')
      .modal-dialog
        .modal-content
          .modal-header
            button(type="button" class="close" data-dismiss="modal") &times;
            p Add a new Role
          .modal-body
            p If you are not finding the role you want, you can add it's name here. We'll review this information. <br/>
            form(id="roleForm", action="/role/new", method="post")
              input.col-md-12.col-sm-12.col-xs-12(type="text", name="name", autofocus, placeholder="Role name", required)
              input(type="hidden", name="suggested_by_volunteer", value="true")
              input(type="hidden", name="created_by", value="#{volunteer._id}")
              input(type="submit", value="Add new role", name="submit", class="btn btn-primary modal-submit")

    .modal.fade#editActivityModal(tabindex='-1')
      .modal-dialog
        .modal-content.col-md-12
          .modal-header
            button(type="button" class="close" data-dismiss="modal") &times;
            p Edit an activity
          .modal-body.col-md-12.col-sm-12.col-xs-12
            include ./_activityModal.jade

    .modal.fade#checkActivityModal(tabindex='-1')
      .modal-dialog
        .modal-content.col-md-12
          .modal-header
            button(type="button" class="close" data-dismiss="modal") &times;
            p Activity Details
          .modal-body.col-md-12.col-sm-12.col-xs-12
            include ./_activityDetailsModal.jade
            

  script.
    $.fn.editable.defaults.mode = 'inline';
    $(document).ready(function() {
      $("#editActivityModal").on('hide.bs.modal', function () {
        if ($("#editActivityModal .skills_list").data('select2'))
          {
            $("#editActivityModal .skills_list").select2('close');
            $("#editActivityModal .role").select2('close');
          }
      });

    $('.editForm').submit(function(event) {
      console.log('submiting');
      event.preventDefault();
      $(this).ajaxSubmit({
        error: function(xhr) {
          console.log(xhr);
        },
        success: function(response) {
        console.log(response);
          location.reload();
        }
      });
    });
  
    $('.activity').on('click', function () {
      if ($(this).data("validated") == "pending")
        {
          $.ajax({
            dataType: "json",
            url: '/activity/get/' + $(this).data("id"),
            success: function(data){
            $('#editActivityModal').modal('toggle');
            $("#editActivityModal").on('shown.bs.modal', function () {
              $(".skills_list").select2({
                placeholder: "Select up to 3 skills",
                maximumSelectionLength: 3,
                language: {
                  maximumSelected: function () {
                    return 'Sorry, you can only select up to 3 skills';
                  }
                }
              });
              $(".role").select2({
                placeholder: "Select a role",
              });
              var newDate = new Date(data.start_date);
              var y = newDate.getFullYear();
              var m = newDate.getMonth() + 1;
              if (m <10) m = '0'+m;
              var d = newDate.getDate();
              if (d <10) d = '0'+d;
              $('#editActivityModal input[name=s_date]').val(y+'-'+m+'-'+d);
              if (data.end_date)
                {
                var endDate = new Date(data.end_date);
                var y_e = endDate.getFullYear();
                var m_e = endDate.getMonth() + 1;
                if (m_e <10) m_e = '0'+m_e;
                var d_e = endDate.getDate();
                if (d_e <10) d_e = '0'+d_e;
                $('#editActivityModal input[name=e_date]').val(y_e+'-'+m_e+'-'+d_e);
                }
              $('#editActivityModal input[name=activity]').val(data._id);
              $('#editActivityModal .role').select2('val', data.role._id);
              $('#editActivityModal .skills_list').select2('val', data.skills_list);
              $('#editActivityModal input[name=hours]').val(data.hours);
              $('#editActivityModal textarea[name=notes]').val(data.notes);
              $('#editActivityModal p.referee_name').text(data.referee.name);
              $('#editActivityModal p.referee_email').text(data.referee.email);
              $('#editActivityModal p.referee_info').text(data.referee.email + ' - ' + data.referee.phone_number);
              if (data.validated_via_email) $('#editActivityModal p.referee_info').append("<br/><em>To be validated via email</em>");
            });
            },
            error: function(err) {
              console.log(err);
            }
          });
        }
        else
          {
            $.ajax({
              dataType: "json",
              url: '/activity/get/' + $(this).data("id"),
              success: function(data){
              $('#checkActivityModal').modal('toggle');
              $("#checkActivityModal").on('shown.bs.modal', function () {
                var newDate = new Date(data.start_date);
                var y = newDate.getFullYear();
                var m = newDate.getMonth() + 1;
                if (m <10) m = '0'+m;
                var d = newDate.getDate();
                if (d <10) d = '0'+d;
                $('#checkActivityModal p.s_date_data em').text(m+'/'+d+'/'+y);
                if (data.end_date)
                  {
                  var endDate = new Date(data.end_date);
                  var y_e = endDate.getFullYear();
                  var m_e = endDate.getMonth() + 1;
                  if (m_e <10) m_e = '0'+m_e;
                  var d_e = endDate.getDate();
                  if (d_e <10) d_e = '0'+d_e;
                  $('#checkActivityModal p.e_date_data em').text(m_e+'/'+d_e+'/'+y_e);
                  }
                $('#checkActivityModal input[name=activity]').val(data._id);
                $('#checkActivityModal p.role_data em').text(data.role.name);
                $('#checkActivityModal p.skills_data em').text(data.skills_list_name.join(', '));
                $('#checkActivityModal p.hours_data em').text(data.hours);
                $('#checkActivityModal textarea[name=notes]').val(data.notes);
                $('#checkActivityModal p.referee_name').text(data.referee.name);
                $('#checkActivityModal p.referee_info').text(data.referee.email + ' - ' + data.referee.phone_number);
                if (data.validated_via_email) $('#checkActivityModal p.referee_info').append("<br/><em>To be validated via email</em>");
              });
              },
              error: function(err) {
                console.log(err);
              }
            });
          }
    })
      
      //- Editable set up
      $('#first_name').editable({emptytext: 'First Name'});
      $('#last_name').editable({emptytext: 'Last Name'});
      $('#graduate').editable({
        emptytext: 'Level',
        source: [
              {value:"undergraduate", text:"Undergraduate"},
              {value:"postgraduate", text:"Postgraduate"},
            ]
        });
      $('#graduation_year').editable({emptytext: 'Graduation year'});
      $('#discipline').editable({emptytext: 'Discipline'});
      $('#email').editable({
        value: email,
        emptytext: 'Email',
        validate: function(value) {
            if($.trim(value) == '') {
                return "This field can't be empty required";
            }
        },
        success: function(response, newValue) {
          if(response.status == 'error') return response.msg;
        }
        });
      $('#phone').editable({
        emptytext: 'Phone Number', 
        value: phone,
        success: function(response, newValue) {
          if (response.status == 'error') return response.msg;
        }
      });
      $('#phone').on('shown', function(e, editable) {
      if (editable) {
         $(this).data('editable').input.$input.inputmask('+44 999-999-9999');
      }
      });
      $('#company').editable({emptytext: 'Company'});
      $('#about').editable({emptytext: 'About Me'});
      $('#about').on('shown', function(e, editable){
          $('.editable-container').css("width", "90%");
          $('.form-group').css("width", "90%");
          $('.editable-input').css("width", "90%");
          $('textarea').css("width", "100%");
          });
      $('#postcode').editable({emptytext: 'Postcode'});
      $('#position').editable({
        emptytext: 'Position',
        source: [
              {value:"student", text:"Student"},
              {value:"employed", text:"Employed"},
              {value:"unemployed", text:"Unemployed"}
            ]
      });
      $("#position").on('save', function(e, params){
          switch(params.newValue)
            {
              case 'student':
                location.reload();
                break;
              case 'unemployed':
                location.reload();
                break;
              case "employed":
                location.reload();
                break;
            }
          //- Reload to avoid building the page with JS. Not a satisfying method -> MEAN
        });
      $('#birthdate').editable({
        format: 'YYYY-MM-DD',    
        viewformat: 'DD/MM/YYYY',    
        template: 'D / MMMM / YYYY',    
        combodate: {
              maxYear: 1999, 
              minYear: 1920
         },
         emptytext: 'Birthdate'
      });
      $('#gender').editable({
        emptytext: "Gender",
        source: [
              {value:"male", text:"Male"},
              {value:"female", text:"Female"}
            ]
      });
      $('#university').editable({
        emptytext: 'University',
        source: [
              {value:"University of Westminster", text:"University of Westminster"},
              {value:"City University", text:"City University"}
            ]
      });

      $('.xp_description').editable({emptytext: 'Describe your Experience'});
      $('.xp_description').on('shown', function(e, editable){
          $('.editable-container').css("width", "90%");
          $('.form-group').css("width", "90%");
          $('.editable-input').css("width", "90%");
          $('textarea').css("width", "100%");
          });
      
      // Preload external data function for skills + role
      function loadExternalData(listName, id) {
        $.getJSON('/'+listName+'/list', function(listName) {
          $(id).empty();
          if (listName) {
            $(id).append('<option></option>');
            $.each(listName, function(i, val){
              $(id).append('<option value='+ val._id + '>'+ val.name +'</option>');
            });
          } 
          console.log(listName);
        });
      }

      // Prepare form to add new skill

      loadExternalData('skill', ".skills_list");
      loadExternalData('role', ".role");
      loadExternalData('nonprofit', "#nonprofit");
      
      // Add experience form open and set up of select2 tags
      $('#addXP').on('click', function(e){
        e.preventDefault();
        $(".XP_form").fadeIn();
        $(".skills_list").select2({
          placeholder: "Select up to 3 skills",
          maximumSelectionLength: 3,
          language: {
            maximumSelected: function () {
              return 'Sorry, you can only select up to 3 skills';
            }
          }
        });
        
        $(".role").select2({
          placeholder: "Select a role",
        });

        // Nonprofit modal
        $("#nonprofit").select2({
          placeholder: "Select a nonprofit",
        }).on('change', function(e){
          console.log(e.currentTarget.selectedOptions[0].text);
          if(e.currentTarget.selectedOptions[0].text=="Other")
            {
              $('#nonprofitModal').modal('toggle');
            }
        });
        $('#nonprofitForm').submit(function(event){
          event.preventDefault();
          $(this).ajaxSubmit({
            error: function(xhr) {
            console.log(xhr);
              $('#nonprofitModal .modal-body').prepend('<div class="alert alert-danger"> \
                <div>'+ xhr.responseText + '</div> \
                <div>Sorry, you can\'t add this nonprofit. Please, contact us if you think you should.</div> \
                </div>');
            },
            success: function(response) {
              loadExternalData('nonprofit', "#nonprofit");
              $('#nonprofitModal').modal('toggle');
            }
          });
        });

        $('html, body').animate({
            scrollTop: $(".XP").offset().top
          }, "slow");
        if ($(".activity_form").is(":visible")) {
          $(".add_new").on('click', showActivity);
          $(".activity_form:visible").hide().removeClass('height-auto').parent().addClass('text-center').removeClass('no-hover').parent().switchClass("col-md-12", "col-md-6", 500, function(){
          $(".add_new").removeClass('hide_it').show();
          });
        }
      });
      
      //- Skill Form
      $('#skillForm').submit(function(event){
        event.preventDefault();
        $(this).ajaxSubmit({
          error: function(xhr) {
          console.log(xhr);
            $('#skillModal .modal-body').prepend('<div class="alert alert-danger"> \
              <div>'+ xhr.responseText + '</div> \
              <div>Sorry, you can\'t add this skill. Please, contact us if you think you should.</div> \
              </div>');
          },
          success: function(response) {
            loadExternalData('skill', ".skills_list");
            $('#skillModal').modal('toggle');
          }
        });
      });

      //- Role Form
      $('#roleForm').submit(function(event){
        event.preventDefault();
        $(this).ajaxSubmit({
          error: function(xhr) {
          console.log(xhr);
            $('#roleModal .modal-body').prepend('<div class="alert alert-danger"> \
              <div>'+ xhr.responseText + '</div> \
              <div>Sorry, you can\'t add this role. Please, contact us if you think you should.</div> \
              </div>');
          },
          success: function(response) {
            loadExternalData('role', ".role");
            $('#roleModal').modal('toggle');
          }
        });
      });

      function showActivity (element) {
        console.log(element);
        $(element).find(".add_new").hide().addClass('hide_it');
        $(element).find(".activity_form").show().addClass('height-auto').parent().removeClass('text-center').addClass('no-hover').parent().switchClass("col-md-6", "col-md-12", 500, function () {
            $('html, body').animate({
              scrollTop: $(element).find(".activity_form").offset().top
            }, "slow");
            $(".skills_list").select2({
              placeholder: "Select up to 3 skills",
              maximumSelectionLength: 3,
              language: {
                maximumSelected: function () {
                  return 'Sorry, you can only select up to 3 skills';
                }
              }
            });
            $(".role").select2({
              placeholder: "Select a role",
            });
          });
      }

      $(".add_new").on('click', function(e){
        e.preventDefault();
        if ($('.XP_form').is(':visible')) {
          $('.XP_form').hide();
          $('html, body').animate({
              scrollTop: $(".activity_form").offset().top
            }, "slow");
        }
        showActivity($(this).parent());
        $(this).off('click', showActivity);
      });

      //-  Add validation that end date > start date
      $("input[name*=s_date]").focusout(function() {
        $('input[name*=e_date]').attr('min', $(this).val());
      });

      $('.XP_form form').submit(function(event) {
        event.preventDefault();
        $(this).ajaxSubmit({
          error: function(xhr) {
            console.log(xhr);
          },
          success: function(response) {
            location.reload();
          }
        });
      });

      $('.activity_form').submit(function(event) {
        event.preventDefault();
        $(this).ajaxSubmit({
          error: function(xhr) {
            console.log(xhr);
          },
          success: function(response) {
            location.reload();
          }
        });
      });

      // Validate photo form
      $('#uploadForm').validate({
          rules: {
              userPhoto: {
                  required: true,
                  extension: "png|jpg|gif|jpeg"
              }
          },
          messages: {
              userPhoto: {
                  required: "Please upload a new photo",
                  extension: "Please upload a valid image file"
              }
          }
      });

      $('#uploadForm').submit(function() {
        $(this).ajaxSubmit({
          error: function(xhr) {
            console.log(xhr);
          },
          success: function(response) {
            console.log(response);
            //remove public from path
            var $newFile = "/"+response+'?dim=400x400';
            $('#uploadModal').modal('toggle');
            $(".user-bg img").attr('src',$newFile);
          }
        });
        return false;
      });   

      $('.reco').on("click", function(e){
        e.preventDefault();
        $('html, body').animate({
          scrollTop: $(".recommendation").offset().top
        }, "slow");
      })

      var today = new Date(); 
      var year = today.getFullYear()
      var month = today.getMonth()+1;
      if (month <10) month = '0'+month;
      var day = today.getDate()+1;
      if (day <10) day = '0'+day;

      $('input[name="s_date"]').attr("max", year+"-"+month+'-'+day).attr('min', '2010-01-01');
      $('input[name="e_date"]').attr("max", year+"-"+month+'-'+day);
      
      $('.little').on('click', function () {
        if ($('#editActivityModal').hasClass('in') == true)
          {
            $('#editActivityModal').modal('hide');
          }
      })

    });
